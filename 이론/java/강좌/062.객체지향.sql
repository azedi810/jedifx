
/* ############################################################################
*  객체지향프로그램
##############################################################################*/

	/*****************************************************
	*  추상화 abstract (업스트랙트)
	******************************************************/
		  -- 현실에서 필요한 관점 -> 해결해야할 문제를 소프트웨어로 표현 -> 복잡한 현실을 추상화화
		  -- 예) 영국의 지하철 지도, 서울지하철  

	/*****************************************************
	*  부품화 : 메소드
	******************************************************/
		-- 어떤 기능을 쪼개는 과정 -> 부품화, 추상화
		-- 예) 컴퓨터 기능별 부품화 -> 애플(통합) /  모니터 본체 키보드  /  최근 일체형 PC / 휴대폰 
		-- 메소드별로 기능 분류 
		-- 부품화, 카테고라이징, 분류   :   연관되어 있는 것들을 묶음 또는 분리 
		 
	/*****************************************************
	*  은닉화 infomation hiding   , 캡슐화 encapsulation 
	******************************************************/
    	-- 객체 메소드 :   모니터를 몰라도 사용할 수 있다 
    
	/*****************************************************
	*  인터페이스 : 연결점 , HDMI 
	******************************************************/
      --  A사 , B사 모니터  표준화되어 있어 같이 사용
    
	/*****************************************************
	*  코딩 의견
	******************************************************/
      --  유지보수 편의성, 가독성, 재활용성 (중복의 제거 -> 메소드 사용)
      -- 리펙토링 refactoring : 기존 코드와 정확히 동일하게 동작하지만 -> 코드의 내용을 개선해서 효율적으로 만드는 행위  
      
	/*****************************************************
	*  가독성
	******************************************************/
 
		1) 프로그램의 읽기 쉬운 정도. 프로그램의 가독성이 높다는 것은 사람이 그 프로그램을 보고 쉽게 이해할 수 있다는 것을 뜻한다. 
		    프로그램의 가독성은 높을수록 좋으며 이를 위해 프로그램 코딩시 변수 이름의 선택, 들여쓰기(indentation), 대소문자의 혼용 등이 권장되고 있다.
		2) OCR, MICR 등 기계적으로 문자를 인식하는 시스템에서 입력되는 문자들이 얼마나 읽기에 좋은가 하는 정도.
		
	/*****************************************************
	*  객체화
	******************************************************/
		
		1. 연관된 로직과 반복되는 내용을 로직화 -> 객체지향
		2. 변수와 메소드의 집합

/* ############################################################################
*  클래스, 인스턴스, 객체(object)
##############################################################################*/

	/*****************************************************
	*  클래스 :  설계도, 정의 , 객체를 만들기위한 설계도   :::  Class ..........
	* 인스턴스 :  제품 , 호출  : CCC cc1 = new CCC();,  CCC cc2 = new CCC();
	* 객체 :   new CCC();
	******************************************************/


 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 






